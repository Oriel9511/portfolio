---
import LanguageSwitcher from "./LanguageSwitcher.astro";
import TranslatedText from "./TranslatedText.astro";

const links = [
    { href: "#top", textKey: "nav.home" },
    { href: "#core", textKey: "nav.coreStrength" },
    { href: "#skills", textKey: "nav.technicalSkills" },
    { href: "#experience", textKey: "nav.experience" },
    { href: "#projects", textKey: "nav.projects" },
    { href: "#about", textKey: "nav.about" },
];
---

<header class="flex justify-between px-6 items-center text-center p-3 fixed z-10 backdrop-blur-xl top-0 left-0 w-full">
    <nav class="hidden md:flex gap-x-10 text-2xl flex-1 justify-center">
        {links.map((link) => (
            <a class="hover:text-blue-400 nav-link" href={link.href}>
                <TranslatedText textKey={link.textKey} />
            </a>
        ))}
    </nav>
    <div class="md:hidden">
        <button id="menu-toggle" class="text-4xl">☰</button>
    </div>
    <LanguageSwitcher />
</header>

<div id="mobile-menu" class="fixed inset-0 backdrop-blur-2xl bg-opacity-10 bg-white z-20 hidden flex-col items-center justify-center opacity-0 transition-opacity duration-300 ease-in-out">
    <button id="close-menu" class="absolute top-4 right-4 text-6xl">✕</button>
    <nav class="flex flex-col gap-y-20 text-6xl text-center">
        {links.map((link) => (
            <a class="hover:text-blue-400 bg-white/10 backdrop-blur-sm px-8 py-6 rounded-lg transition-all duration-300 hover:bg-white/20 mobile-nav-link" href={link.href}>
                <TranslatedText textKey={link.textKey} />
            </a>
        ))}
    </nav>
</div>

<style>
    .mobile-menu-open {
        overflow: hidden;
    }
</style>

<script>
    const menuToggle = document.getElementById('menu-toggle');
    const closeMenu = document.getElementById('close-menu');
    const mobileMenu = document.getElementById('mobile-menu');

    menuToggle.addEventListener('click', () => {
        mobileMenu.classList.remove('hidden');
        mobileMenu.classList.add('flex');
        document.body.classList.add('mobile-menu-open');
        setTimeout(() => {
            mobileMenu.classList.add('opacity-100');
        }, 10);
    });

    closeMenu.addEventListener('click', () => {
        mobileMenu.classList.remove('opacity-100');
        setTimeout(() => {
            mobileMenu.classList.add('hidden');
            mobileMenu.classList.remove('flex');
            document.body.classList.remove('mobile-menu-open');
        }, 300);
    });

    // Close menu when clicking on a link
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
            mobileMenu.classList.remove('opacity-100');
            setTimeout(() => {
                mobileMenu.classList.add('hidden');
                mobileMenu.classList.remove('flex');
                document.body.classList.remove('mobile-menu-open');
            }, 300);
        });
    });


</script>
